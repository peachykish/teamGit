[{"/Users/johnulbright/ElevenFifty/projects/blue-badge-projects/teamGit/src/index.js":"1","/Users/johnulbright/ElevenFifty/projects/blue-badge-projects/teamGit/src/App.js":"2","/Users/johnulbright/ElevenFifty/projects/blue-badge-projects/teamGit/src/components/Navbar.js":"3","/Users/johnulbright/ElevenFifty/projects/blue-badge-projects/teamGit/src/components/Weather.js":"4","/Users/johnulbright/ElevenFifty/projects/blue-badge-projects/teamGit/src/components/NasaImage.js":"5","/Users/johnulbright/ElevenFifty/projects/blue-badge-projects/teamGit/src/components/Restaurants.js":"6","/Users/johnulbright/ElevenFifty/projects/blue-badge-projects/teamGit/src/components/weatherDisplay.js":"7"},{"size":1110,"mtime":1612793615285,"results":"8","hashOfConfig":"9"},{"size":1831,"mtime":1612882631773,"results":"10","hashOfConfig":"9"},{"size":1977,"mtime":1612884145472,"results":"11","hashOfConfig":"9"},{"size":2866,"mtime":1612877693231,"results":"12","hashOfConfig":"9"},{"size":363,"mtime":1612878145201,"results":"13","hashOfConfig":"9"},{"size":1410,"mtime":1612877693226,"results":"14","hashOfConfig":"9"},{"size":206,"mtime":1612877693234,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"19txnpc",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/johnulbright/ElevenFifty/projects/blue-badge-projects/teamGit/src/index.js",[],["34","35"],"/Users/johnulbright/ElevenFifty/projects/blue-badge-projects/teamGit/src/App.js",[],"/Users/johnulbright/ElevenFifty/projects/blue-badge-projects/teamGit/src/components/Navbar.js",["36","37","38"],"/Users/johnulbright/ElevenFifty/projects/blue-badge-projects/teamGit/src/components/Weather.js",["39"],"import React, { useState, useEffect } from \"react\";\nimport WeatherDisplay from \"./weatherDisplay\";\nimport {\n  Row,\n  Col,\n  Card,\n  CardBody,\n  CardTitle,\n  CardFooter,\n  CardSubtitle,\n  Button,\n} from \"reactstrap\";\n\nconst Weather = (props) => {\n  const key = \"c2845afc3766e0d9e612589838737941\";\n  let lon = props.location.longitude;\n  let lat = props.location.latitude;\n  let url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=imperial&appid=${key}`;\n  const [temp, setTemp] = useState();\n  const [label, setLabel] = useState(\"\");\n  const [degree, setDegree] = useState(\"\");\n  const [county, setCounty] = useState(\"\");\n  const [converted, setConverted] = useState();\n  const [isLoaded,setIsLoaded]=useState(false);\n\n  function convertTempCelsius(temp) {\n    let cTemp = ((temp - 32) * 5) / 9;\n    let degree = Math.round((cTemp + Number.EPSILON) * 100) / 100;\n    return degree;\n  }\n  useEffect(() => {\n\n    fetch(url)\n      .then((res) => {\n        console.log(res);\n        if (res.status !== 200) {\n          throw new Error(\"Fetch Function Error\");\n        } else {\n          return res.json();\n        }\n      })\n      .then(json => {\n          console.log(json)\n          if(json.length === 0){\n              throw new Error('No Fetch Data');\n          }\n          else{\n              console.log(json);\n              setTemp(json.main.temp);\n              setCounty(json.name);\n              setIsLoaded(true);\n          }\n      })\n      .catch((err) => console.log(\"error\",err));\n  }, [props]);\n  function showFahrenheit(event) {\n    setLabel(\"Fahrenheit\");\n    setDegree(\"F\");\n    setConverted(temp);\n  }\n  function showCelsius(event) {\n    setLabel(\"Celsius\");\n    setDegree(\"C\");\n    setConverted(convertTempCelsius(temp));\n  }\n  if (!isLoaded){\n    return <div onChange={()=>useEffect}>Loading...</div>\n} else {\n  return (\n    <div>\n      <h1>Here's the current temperature for your location.</h1>\n      <h2>Latitude: {lat}</h2>\n      <h2>Longitude: {lon}</h2>\n      <Row>\n        <Col sm=\"12\">\n          <Card body>\n            <CardTitle>\n              <h4>Local Weather</h4>\n            </CardTitle>\n            <CardSubtitle>for: {!county ? null : county}</CardSubtitle>\n            <CardBody>\n              <Button outline block onClick={showFahrenheit}>\n                Fahrenheit\n              </Button>\n              <Button outline block onClick={showCelsius}>\n                Celsius\n              </Button>\n            </CardBody>\n            <CardFooter id=\"card_footer\">\n              {!converted ? null : (\n                <WeatherDisplay\n                  temp={converted}\n                  label={label}\n                  degree={degree}\n                />\n              )}\n            </CardFooter>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n              }\n};\n\nexport default Weather;","/Users/johnulbright/ElevenFifty/projects/blue-badge-projects/teamGit/src/components/NasaImage.js",["40"],"//import { useState,useEffect } from \"react\";\n\nconst NasaImage=(props)=>{\n    return(\n        <div className=\"nasa\">\n            <h1>{props.location.city}, {props.location.region} one year ago today:</h1>\n            <p>(Image is from one year ago to ensure an image exists)</p>\n            <img src={props.url}/>\n        </div>\n    )\n}\n\nexport default NasaImage;","/Users/johnulbright/ElevenFifty/projects/blue-badge-projects/teamGit/src/components/Restaurants.js",["41"],"import { useEffect, useState } from \"react\";\n\nconst Restaurants=(props)=>{\n    const [isLoaded,setIsLoaded]=useState(false);\n    const [restaurants,setRestaurants]=useState([]);\n    const [error,setError]=useState(null);\n    \n    useEffect(() => {\n        fetch(`https://developers.zomato.com/api/v2.1/search?count=10&lat=${props.lat}&lon=${props.lon}`, {\n                headers: {\n                  \"content-type\": \"application/json\",\n                  \"User-Key\": \"a5648799faa95af317e7485487f4a22d\",\n                },\n              })\n        .then(res=>res.json())\n        .then((result)=>{\n            const newArray=[...restaurants,result]\n            setRestaurants(newArray);\n            console.log(\"arr of rest\",restaurants);\n            setIsLoaded(true);\n\n        },\n            (error)=>{\n            setIsLoaded(true);\n            setError(error);\n            }\n    )\n        },[props]);\n    if(error){\n        return <div>Error:{error.message}</div>\n    } else if (!isLoaded){\n        return <div onChange={()=>useEffect}>Loading...</div>\n    } else {\n        return (\n            <div>\n                <h1>Here are some resturants near you.</h1><ul className=\"restaurant-list\">\n            {restaurants[0].restaurants.map((item)=>(\n                <li key={item.restaurant.id}>{item.restaurant.name}</li>\n            ))}\n\n            </ul></div>\n        )\n    }\n}\n\nexport default Restaurants;\n","/Users/johnulbright/ElevenFifty/projects/blue-badge-projects/teamGit/src/components/weatherDisplay.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":1,"column":17,"nodeType":"48","messageId":"49","endLine":1,"endColumn":25},{"ruleId":"46","severity":1,"message":"50","line":1,"column":27,"nodeType":"48","messageId":"49","endLine":1,"endColumn":36},{"ruleId":"51","severity":1,"message":"52","line":45,"column":9,"nodeType":"53","endLine":45,"endColumn":68},{"ruleId":"54","severity":1,"message":"55","line":55,"column":6,"nodeType":"56","endLine":55,"endColumn":13,"suggestions":"57"},{"ruleId":"58","severity":1,"message":"59","line":8,"column":13,"nodeType":"53","endLine":8,"endColumn":35},{"ruleId":"54","severity":1,"message":"60","line":28,"column":11,"nodeType":"56","endLine":28,"endColumn":18,"suggestions":"61"},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.","ArrayExpression",["64"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'restaurants'. Either include it or remove the dependency array.",["65"],"no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},{"desc":"68","fix":"69"},"Update the dependencies array to be: [props, url]",{"range":"70","text":"71"},"Update the dependencies array to be: [props, restaurants]",{"range":"72","text":"73"},[1526,1533],"[props, url]",[893,900],"[props, restaurants]"]